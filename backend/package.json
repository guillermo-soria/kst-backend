{
  "name": "medusa-starter-default",
  "version": "0.0.1",
  "description": "A starter for Medusa projects.",
  "author": "Medusa (https://medusajs.com)",
  "license": "MIT",
  "keywords": [
    "sqlite",
    "postgres",
    "typescript",
    "ecommerce",
    "headless",
    "medusa"
  ],
  "scripts": {
    "build": "medusa build",
    "build:production": "NODE_OPTIONS='--max-old-space-size=1024' medusa build",
    "seed": "medusa exec ./src/scripts/seed.ts",
    "start": "medusa start",
    "dev": "medusa develop",
    "db:create": "medusa db:create",
    "db:migrate": "medusa db:migrate",
    "db:seed": "npm run seed",
    "railway:build": "NODE_OPTIONS='--max-old-space-size=1024' medusa build && NODE_OPTIONS='--max-old-space-size=1024' medusa build --admin-only",
    "railway:start": "if [ ! -f .medusa/admin/index.html ]; then echo 'Admin build not found, attempting fallback...'; mkdir -p .medusa/admin; if cp -r .medusa/client/* .medusa/admin/ 2>/dev/null; then echo 'Copied admin build from .medusa/client to .medusa/admin'; else echo 'No client build to copy. Disabling Admin UI for this run.'; export DISABLE_MEDUSA_ADMIN=true; fi; fi; PORT=${PORT:-9000}; export PORT; medusa db:migrate && medusa start --port \"$PORT\"",
    "health": "curl -f http://localhost:9000/health || exit 1",
    "lint": "echo 'Backend: No linting configured'",
    "test": "npm run test:unit",
    "test:integration:http": "TEST_TYPE=integration:http NODE_OPTIONS=--experimental-vm-modules jest --silent=false --runInBand --forceExit",
    "test:integration:modules": "TEST_TYPE=integration:modules NODE_OPTIONS=--experimental-vm-modules jest --silent=false --runInBand --forceExit",
    "test:unit": "TEST_TYPE=unit NODE_OPTIONS=--experimental-vm-modules jest --silent --runInBand --forceExit"
  },
  "dependencies": {
    "@medusajs/admin-sdk": "2.10.3",
    "@medusajs/auth": "^2.10.3",
    "@medusajs/auth-emailpass": "^2.10.3",
    "@medusajs/cli": "2.10.3",
    "@medusajs/framework": "2.10.3",
    "@medusajs/medusa": "2.10.3",
    "@medusajs/cache-redis": "^2.10.3",
    "@medusajs/event-bus-redis": "^2.10.3",
    "@medusajs/workflow-engine-redis": "^2.10.3",
    "ioredis": "^5.8.0",
    "@mikro-orm/core": "6.4.3",
    "@mikro-orm/knex": "6.4.3",
    "@mikro-orm/migrations": "6.4.3",
    "@mikro-orm/postgresql": "6.4.3",
    "awilix": "^8.0.1",
    "pg": "^8.16.3",
    "bcryptjs": "^3.0.2",
    "node-fetch": "^2.7.0"
  },
  "devDependencies": {
    "@medusajs/test-utils": "2.10.3",
    "@mikro-orm/cli": "6.4.3",
    "@swc/core": "1.5.7",
    "@swc/jest": "^0.2.36",
    "@types/jest": "^29.5.13",
    "@types/node": "^20.0.0",
    "@types/react": "^18.3.2",
    "@types/react-dom": "^18.2.25",
    "jest": "^29.7.0",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.2",
    "vite": "^5.2.11",
    "yalc": "^1.0.0-pre.53"
  },
  "engines": {
    "node": ">=20"
  }
}
